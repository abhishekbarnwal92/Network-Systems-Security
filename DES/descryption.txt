
DES (Data Encryption Standard) is a symmetric(private) key block cipher. 
It is a combination of several substitution and transposition operations. 
It takes 64-bit plaintext and 64-bit key(effectively 56-bit key) as input and converts it into a 64-bit ciphertext. 
It diffuses all the bits of  plaintext over ciphertext bits.
It follows fiestel cipher structure.

DES uses standard tables for substitution and transpositions. 
One can find these standard tables on wikipedia. 
DES encrypts the 64-bit plaintext into ciphertext in 16 rounds of encryption. 
In each round it uses 48-bit key for encryption which comes from 56-bit key. 
So first it applies initial permutation on 64-bits of plaintext and 
in the end it again applies final permutation to converts it into complete ciphertext. 
In between, 16 rounds of encryption work using 16 keys of size 48-bit each.

56 bits from 64 bits of key are selected using following matrix:
					57, 49, 41, 33, 25, 17, 9,
					1, 	58,	50,	42, 34,	26,	18,
					10,	2, 	59,	51,	43,	35,	27,
					19,	11,	3,	60,	52,	44,	36,
					63,	55,	47,	39,	31,	23,	15,
					7, 	62,	54,	46,	38,	30,	22,
					14,	6, 	61,	53,	45,	37,	29,
					21,	13,	5, 	28,	20,	12,	4 

Initial and Final Permutation:
------------------------------
So it takes 64-bit data and permutate all 64 bits according to these matrices 
i.e. 58th bit of input data will come at first position of permuted 64-bit data and so on. 
Input of Initial Permutation Box will be 64 bit of input plaintext.
Output of Final Permutation box is our ciphertext. All the encryption happens between these two permutations.

Initial Permutation Matrix:
					58,	50,	42,	34,	26,	18,	10,	2,
					60,	52,	44,	36,	28,	20,	12,	4,
					62,	54,	46,	38,	30,	22,	14,	6,
					64,	56,	48,	40,	32,	24,	16,	8,
					57,	49,	41,	33,	25,	17,	9,	1,
					59,	51,	43,	35,	27,	19,	11,	3,
					61,	53,	45,	37,	29,	21,	13,	5,
					63,	55,	47,	39,	31,	23,	15,	7

Final Permutation Matrix:
				40, 8, 	48,	16,	56,	24,	64,	32,
				39,	7, 	47,	15,	55,	23,	63,	31,
				38,	6, 	46,	14,	54,	22,	62,	30,
				37,	5, 	45,	13,	53,	21,	61,	29,
				36,	4,	44,	12,	52,	20,	60,	28,
				35,	3,	43,	11,	51,	19,	59,	27,
				34,	2,	42,	10,	50,	18,	58,	26,
				33,	1, 	41,	9, 	49,	17,	57,	25

Round Function:
---------------
This is the main Encryption part. 
In each round it takes output of last round and 48-bit size key as its input and converts into output of this round. 
So these rounds go on for 16 times. 
The first round input is output of Initial Permutation and the Output of 16th round goes through Final permutation.
Last 32 bits of current round works as next round's initial 32 bits and 
next round's last 32 bits comes from XOR of F-box's output and first 32 bits of current round. 
Same thing happens in the reverse order while decrypting.

Expansion-P Box:
----------------
It converts 32 bits into 48 bits. 
					32,	1, 	2, 	3, 	4, 	5,
					4, 	5, 	6, 	7, 	8, 	9,
					8, 	9, 	10,	11,	12,	13,
					12,	13,	14, 15,	16,	17,
					16,	17,	18,	19,	20,	21,
					20,	21,	22,	23,	24,	25,
					24,	25,	26,	27,	28,	29,
					28,	29,	30,	31,	32,	1

Substitution Boxes:
-------------------
The S-boxes carry out the real mixing (confusion). 
DES uses 8 S-boxes, each with a 6-bit input and a 4-bit output. 
So basically it converts 48 bits into 32 bits.
sbox1 = [
		[	14,	4, 	13,	1,	2, 	15,	11,	8,	3, 	10,	6, 	12,	5, 	9, 	0, 	7],
 		[	0, 	15,	7, 	4, 	14,	2, 	13,	1, 	10,	6, 	12,	11,	9, 	5, 	3, 	8],
 		[	4, 	1, 	14,	8, 	13,	6, 	2, 	11,	15,	12,	9, 	7, 	3, 	10,	5, 	0],
 		[	15,	12,	8, 	2, 	4, 	9, 	1, 	7, 	5, 	11,	3, 	14,	10,	0, 	6, 	13]
 		]

sbox2 = [
		[	15,	1, 	8, 	14,	6, 	11,	3, 	4, 	9, 	7, 	2, 	13, 12,	0, 	5, 	10],
		[ 3, 	13,	4, 	7, 	15,	2, 	8, 	14,	12,	0, 	1, 	10,	6, 	9, 	11,	5],
		[ 0, 	14,	7, 	11,	10,	4, 	13, 1, 	5, 	8, 	12,	6, 	9, 	3, 	2, 	15],
		[ 13,	8, 	10,	1, 	3, 	15,	4, 	2, 	11,	6, 	7, 	12,	0, 	5, 	14,	9]
		]

sbox3 = [
		[	10,	0, 	9, 	14,	6, 	3, 	15,	5, 	1, 	13,	12,	7, 	11,	4, 	2, 	8],
		[ 13,	7, 	0, 	9, 	3, 	4, 	6, 	10,	2, 	8, 	5, 	14,	12,	11,	15,	1],
		[	13,	6, 	4, 	9, 	8, 	15,	3, 	0, 	11,	1, 	2, 	12,	5, 	10,	14, 7],
		[ 1, 	10,	13, 0, 	6, 	9, 	8, 	7, 	4, 	15,	14,	3, 	11,	5, 	2, 	12]
		]

sbox4 = [
		[	7, 	13,	14,	3, 	0, 	6, 	9, 	10,	1, 	2, 	8, 	5, 	11,	12,	4, 	15],
		[	13,	8, 	11, 5, 	6, 	15,	0, 	3, 	4, 	7, 	2, 	12,	1, 	10,	14,	9],
		[ 10,	6, 	9, 	0, 	12,	11,	7, 	13,	15,	1, 	3, 	14,	5, 	2, 	8, 	4],
		[ 3, 	15,	0, 	6, 	10,	1, 	13,	8, 	9, 	4, 	5, 	11,	12, 7, 	2, 	14]
		]

sbox5 = [
		[	2, 	12,	4, 	1, 	7, 	10,	11, 6, 	8, 	5, 	3, 	15,	13,	0, 	14,	9],
		[	14,	11,	2, 	12,	4, 	7, 	13,	1, 	5, 	0, 	15,	10, 3, 	9, 	8, 	6],
		[	4, 	2, 	1, 	11,	10, 13,	7, 	8, 	15,	9, 	12,	5, 	6, 	3, 	0, 	14],
		[ 11,	8, 	12, 7, 	1, 	14,	2, 	13,	6, 	15,	0, 	9, 	10,	4, 	5, 	3]
		]

sbox6 = [
		[	12,	1, 	10,	15,	9, 	2, 	6, 	8, 	0, 	13,	3, 	4, 	14,	7, 	5, 	11],
		[	10,	15,	4, 	2, 	7, 	12,	9, 	5, 	6, 	1, 	13,	14,	0, 	11,	3, 	8],
		[	9, 	14,	15,	5, 	2, 	8,	12,	3, 	7, 	0, 	4, 	10,	1, 	13, 11,	6],
		[ 4, 	3, 	2, 	12,	9, 	5, 	15,	10, 11,	14,	1, 	7, 	6, 	0, 	8, 	13]
		]

sbox7 = [
		[	4, 	11,	2, 	14,	15,	0, 	8, 	13,	3, 	12,	9, 	7, 	5, 	10,	6, 	1],
		[	13,	0, 	11,	7, 	4, 	9, 	1, 	10,	14,	3, 	5, 	12,	2, 	15,	8, 	6],
		[	1, 	4, 	11,	13,	12,	3, 	7, 	14,	10,	15,	6, 	8, 	0, 	5, 	9, 	2],
		[ 6, 	11,	13,	8, 	1, 	4, 	10,	7, 	9, 	5, 	0, 	15,	14,	2, 	3, 	12]
		]

sbox8 = [
		[	13,	2, 	8, 	4, 	6, 	15,	11,	1, 	10, 9, 	3, 	14,	5, 	0, 	12,	7],
		[	1, 	15,	13,	8, 	10,	3, 	7, 	4, 	12,	5, 	6, 	11,	0, 	14,	9, 	2],
		[ 7, 	11,	4, 	1, 	9, 	12,	14,	2, 	0, 	6, 	10,	13,	15,	3, 	5, 	8],
		[ 2, 	1, 	14,	7, 	4, 	10,	8, 	13,	15,	12,	9, 	0, 	3, 	5, 	6, 	11]
		]

The first and last bit of 6-bit input select row of table and rest of the 4 bits select columns of the table 
and the corresponding entry gives 4-bit output.
There are many entries which get repeated in the S-boxes because size of the box is 64 
and it contains 16 numbers(4 bits) so each number get repeat 4 times.

Straight Permutation Box:
-------------------------
					16,	7, 	20,	21, 29, 12,	28,	17,
					1, 	15,	23,	26,	5, 	18,	31,	10,
					2, 	8, 	24,	14,	32,	27,	3, 	9,
					19,	13,	30,	6, 	22,	11,	4, 	25
          
Generation of KEYs:
-------------------
The round-key generator creates sixteen 48-bit keys out of a 56-bit key. 
In Encryption round 1 key works in round 1 but in decryption it works in final round. 
Left Shifting of bits varies on the number of round. 
In 1st, 2nd, 9th and 16th rounds, bits get shift by one and in other rounds bits get left shift by two position. 
Compression Box is used for compressing 56-bits into 48-bits.
			14, 17,	11,	24,	1, 	5,
			3, 	28,	15,	6, 	21,	10,
			23,	19,	12,	4, 	26,	8,
			16, 7, 	27,	20,	13,	2,
			41,	52,	31,	37,	47,	55,
			30,	40,	51,	45,	33,	48,
			44,	49,	39,	56,	34,	53,
			46,	42,	50,	36,	29,	32

That concludes the theory.
